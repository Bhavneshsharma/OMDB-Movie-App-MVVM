package com.deepexploit.fiprojectbhavnesh.repository

import androidx.lifecycle.LiveData
import androidx.lifecycle.MutableLiveData
import com.deepexploit.fiprojectbhavnesh.model.OmdbResponseModel
import com.deepexploit.fiprojectbhavnesh.model.OmdbService
import retrofit2.Call
import retrofit2.Callback
import retrofit2.Response

class OmdbRepository(private val omdbService : OmdbService){

    private var _omdbLiveData = MutableLiveData<OmdbResponseModel?>()
    val omdbLiveData : LiveData<OmdbResponseModel?>
    get() = _omdbLiveData

    private var _omdbErrorLiveData = MutableLiveData<Boolean>()
    val omdbErrorLiveData : LiveData<Boolean>
    get() = _omdbErrorLiveData

    fun getData(search : String, page : Int, type : String){
       val result = omdbService.getData(search,page,type)
       result.enqueue(object : Callback<OmdbResponseModel>{
           override fun onResponse(
               call: Call<OmdbResponseModel>,
               response: Response<OmdbResponseModel>
           ) {
               val responseBody = response.body()
               _omdbLiveData.postValue(responseBody)
               _omdbErrorLiveData.postValue(responseBody?.response ?: true)
           }

           override fun onFailure(call: Call<OmdbResponseModel>, t: Throwable) {
               _omdbErrorLiveData.postValue(true)
           }
       })
    }

}